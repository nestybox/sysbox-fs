// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/nestybox/sysbox-fs/domain"
	mock "github.com/stretchr/testify/mock"
)

// NSenterEventIface is an autogenerated mock type for the NSenterEventIface type
type NSenterEventIface struct {
	mock.Mock
}

// GetProcessID provides a mock function with given fields:
func (_m *NSenterEventIface) GetProcessID() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}

// GetRequestMsg provides a mock function with given fields:
func (_m *NSenterEventIface) GetRequestMsg() *domain.NSenterMessage {
	ret := _m.Called()

	var r0 *domain.NSenterMessage
	if rf, ok := ret.Get(0).(func() *domain.NSenterMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.NSenterMessage)
		}
	}

	return r0
}

// GetResponseMsg provides a mock function with given fields:
func (_m *NSenterEventIface) GetResponseMsg() *domain.NSenterMessage {
	ret := _m.Called()

	var r0 *domain.NSenterMessage
	if rf, ok := ret.Get(0).(func() *domain.NSenterMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.NSenterMessage)
		}
	}

	return r0
}

// ReceiveResponse provides a mock function with given fields:
func (_m *NSenterEventIface) ReceiveResponse() *domain.NSenterMessage {
	ret := _m.Called()

	var r0 *domain.NSenterMessage
	if rf, ok := ret.Get(0).(func() *domain.NSenterMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.NSenterMessage)
		}
	}

	return r0
}

// SendRequest provides a mock function with given fields:
func (_m *NSenterEventIface) SendRequest() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetRequestMsg provides a mock function with given fields: m
func (_m *NSenterEventIface) SetRequestMsg(m *domain.NSenterMessage) {
	_m.Called(m)
}

// SetResponseMsg provides a mock function with given fields: m
func (_m *NSenterEventIface) SetResponseMsg(m *domain.NSenterMessage) {
	_m.Called(m)
}

// TerminateRequest provides a mock function with given fields:
func (_m *NSenterEventIface) TerminateRequest() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
