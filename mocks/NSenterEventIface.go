//
// Copyright 2019-2020 Nestybox, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/nestybox/sysbox-fs/domain"
	mock "github.com/stretchr/testify/mock"
)

// NSenterEventIface is an autogenerated mock type for the NSenterEventIface type
type NSenterEventIface struct {
	mock.Mock
}

// GetRequestMsg provides a mock function with given fields:
func (_m *NSenterEventIface) GetRequestMsg() *domain.NSenterMessage {
	ret := _m.Called()

	var r0 *domain.NSenterMessage
	if rf, ok := ret.Get(0).(func() *domain.NSenterMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.NSenterMessage)
		}
	}

	return r0
}

// GetResponseMsg provides a mock function with given fields:
func (_m *NSenterEventIface) GetResponseMsg() *domain.NSenterMessage {
	ret := _m.Called()

	var r0 *domain.NSenterMessage
	if rf, ok := ret.Get(0).(func() *domain.NSenterMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.NSenterMessage)
		}
	}

	return r0
}

// ReceiveResponse provides a mock function with given fields:
func (_m *NSenterEventIface) ReceiveResponse() *domain.NSenterMessage {
	ret := _m.Called()

	var r0 *domain.NSenterMessage
	if rf, ok := ret.Get(0).(func() *domain.NSenterMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.NSenterMessage)
		}
	}

	return r0
}

// SendRequest provides a mock function with given fields:
func (_m *NSenterEventIface) SendRequest() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetRequestMsg provides a mock function with given fields: m
func (_m *NSenterEventIface) SetRequestMsg(m *domain.NSenterMessage) {
	_m.Called(m)
}

// SetResponseMsg provides a mock function with given fields: m
func (_m *NSenterEventIface) SetResponseMsg(m *domain.NSenterMessage) {
	_m.Called(m)
}
