// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/nestybox/sysbox-fs/domain"
	mock "github.com/stretchr/testify/mock"
)

// FuseServerServiceIface is an autogenerated mock type for the FuseServerServiceIface type
type FuseServerServiceIface struct {
	mock.Mock
}

// CreateFuseServer provides a mock function with given fields: serveCntr, stateCntr
func (_m *FuseServerServiceIface) CreateFuseServer(serveCntr domain.ContainerIface, stateCntr domain.ContainerIface) error {
	ret := _m.Called(serveCntr, stateCntr)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.ContainerIface, domain.ContainerIface) error); ok {
		r0 = rf(serveCntr, stateCntr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DestroyFuseServer provides a mock function with given fields: mp
func (_m *FuseServerServiceIface) DestroyFuseServer(mp string) error {
	ret := _m.Called(mp)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(mp)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DestroyFuseService provides a mock function with given fields:
func (_m *FuseServerServiceIface) DestroyFuseService() {
	_m.Called()
}

// FuseServerCntrRegComplete provides a mock function with given fields: cntr
func (_m *FuseServerServiceIface) FuseServerCntrRegComplete(cntr domain.ContainerIface) error {
	ret := _m.Called(cntr)

	var r0 error
	if rf, ok := ret.Get(0).(func(domain.ContainerIface) error); ok {
		r0 = rf(cntr)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Setup provides a mock function with given fields: mp, css, ios, hds
func (_m *FuseServerServiceIface) Setup(mp string, css domain.ContainerStateServiceIface, ios domain.IOServiceIface, hds domain.HandlerServiceIface) error {
	ret := _m.Called(mp, css, ios, hds)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, domain.ContainerStateServiceIface, domain.IOServiceIface, domain.HandlerServiceIface) error); ok {
		r0 = rf(mp, css, ios, hds)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
